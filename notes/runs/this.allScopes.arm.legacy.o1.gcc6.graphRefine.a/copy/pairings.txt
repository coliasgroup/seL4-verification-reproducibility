Pairing (l_impl'isb (ASM) <= r_impl'isb (C)) {
Pairing
IN ASM_IN Var inst_ident Token C_IN Var inst_ident Token
IN ASM_IN Var mem Mem C_IN Var mem Mem
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var mem Mem
OUT ASM_OUT Op ROData Bool 1 Var mem Mem C_OUT Op True Bool 0
EndPairing
}
Pairing (Arch_switchToThread (ASM) <= Kernel_C.Arch_switchToThread (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tcb___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 52 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (setupCallerCap (ASM) <= Kernel_C.setupCallerCap (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var sender___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var receiver___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var canGrant___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 80 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (suspend (ASM) <= Kernel_C.suspend (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var target___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 220 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (decodeSetSchedParams (ASM) <= Kernel_C.decodeSetSchedParams (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var length___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 500 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (ensureNoChildren (ASM) <= Kernel_C.ensureNoChildren (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 96 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (hasCancelSendRights (ASM) <= Kernel_C.hasCancelSendRights (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (deriveCap (ASM) <= Kernel_C.deriveCap (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 120 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 8 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_deriveCap_ret_C#v.status_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_deriveCap_ret_C#v.cap_C.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 8 Word 32 C_OUT Var ret__struct_deriveCap_ret_C#v.cap_C.words_C.1 Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 5 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 8 Word 32
EndPairing
}
Pairing (deletedIRQHandler (ASM) <= Kernel_C.deletedIRQHandler (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var irq___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (bi_finalise (ASM) <= Kernel_C.bi_finalise (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (APFromVMRights (ASM) <= Kernel_C.APFromVMRights (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var vm_rights___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 16 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (c_handle_fastpath_reply_recv (ASM) <= Kernel_C.c_handle_fastpath_reply_recv (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cptr___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var msgInfo___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cancelIPC (ASM) <= Kernel_C.cancelIPC (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tptr___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 212 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (map_kernel_window (ASM) <= Kernel_C.map_kernel_window (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (fpsimd_HWCapTest (ASM) <= Kernel_C.fpsimd_HWCapTest (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (decodeSetPriority (ASM) <= Kernel_C.decodeSetPriority (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var length___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 492 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (loadCapTransfer (ASM) <= Kernel_C.loadCapTransfer (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 8 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_cap_transfer_C#v.ctReceiveRoot_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_cap_transfer_C#v.ctReceiveIndex_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 8 Word 32 C_OUT Var ret__struct_cap_transfer_C#v.ctReceiveDepth_C Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 5 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 8 Word 32
EndPairing
}
Pairing (cpu_iface_init (ASM) <= Kernel_C.cpu_iface_init (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (setMRs_fault (ASM) <= Kernel_C.setMRs_fault (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var sender___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var receiver___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var receiveIPCBuffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 24 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (handleInterruptEntry (ASM) <= Kernel_C.handleInterruptEntry (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 268 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invokeCNodeRevoke (ASM) <= Kernel_C.invokeCNodeRevoke (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var destSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 412 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cteDeleteOne (ASM) <= Kernel_C.cteDeleteOne (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 172 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (Arch_configureIdleThread (ASM) <= Kernel_C.Arch_configureIdleThread (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tcb___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (Arch_getObjectSize (ASM) <= Kernel_C.Arch_getObjectSize (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var t___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 16 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (setThreadState (ASM) <= Kernel_C.setThreadState (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tptr___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var ts___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 56 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (slotCapLongRunningDelete (ASM) <= Kernel_C.slotCapLongRunningDelete (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 112 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (plat_cleanCache (ASM) <= Kernel_C.plat_cleanCache (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (Arch_deriveCap (ASM) <= Kernel_C.Arch_deriveCap (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 24 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 8 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_deriveCap_ret_C#v.status_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_deriveCap_ret_C#v.cap_C.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 8 Word 32 C_OUT Var ret__struct_deriveCap_ret_C#v.cap_C.words_C.1 Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 5 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 8 Word 32
EndPairing
}
Pairing (tcbSchedEnqueue (ASM) <= Kernel_C.tcbSchedEnqueue (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tcb___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 32 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (isValidVTableRoot (ASM) <= Kernel_C.isValidVTableRoot (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (possibleSwitchTo (ASM) <= Kernel_C.possibleSwitchTo (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var target___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 48 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (deleteASIDPool (ASM) <= Kernel_C.deleteASIDPool (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var asid_base___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var pool___ptr_to_struct_asid_pool_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 60 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (isCapRevocable (ASM) <= Kernel_C.isCapRevocable (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var derivedCap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var derivedCap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var srcCap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var srcCap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 16 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (pageTableMapped (ASM) <= Kernel_C.pageTableMapped (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var asid___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var vaddr___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var pt___ptr_to_struct_pte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 24 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__ptr_to_struct_pde_C#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (strnlen (ASM) <= Kernel_C.strnlen (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var s___ptr_to_char#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var maxlen___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cancelAllIPC (ASM) <= Kernel_C.cancelAllIPC (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var epptr___ptr_to_struct_endpoint_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 72 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (makeUserPDE (ASM) <= Kernel_C.makeUserPDE (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var page_size___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var paddr___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var parity___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cacheable___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var nonexecutable___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var domain___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 C_IN Var vm_rights___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 40 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__struct_pde_C#v.words_C.0 Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 5 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cap_get_capSizeBits (ASM) <= Kernel_C.cap_get_capSizeBits (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 24 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (getHWASID (ASM) <= Kernel_C.getHWASID (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var asid___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 12 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Op WordCast Word 32 1 Var ret__unsigned_char#v Word 8
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cpu_initLocalIRQController (ASM) <= Kernel_C.cpu_initLocalIRQController (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (memset (ASM) <= Kernel_C.memset (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var s___ptr_to_void#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var c___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var n___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__ptr_to_void#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (finaliseCap (ASM) <= Kernel_C.finaliseCap (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var final___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var exposed___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Op IfThenElse Word 32 3 Op Equals Bool 2 Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Num 1 Word 32 Num 132 Word 32 Num 244 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 12 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Less Bool 2 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_finaliseCap_ret_C#v.remainder_C.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_finaliseCap_ret_C#v.remainder_C.words_C.1 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 8 Word 32 C_OUT Var ret__struct_finaliseCap_ret_C#v.cleanupInfo_C.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 12 Word 32 C_OUT Var ret__struct_finaliseCap_ret_C#v.cleanupInfo_C.words_C.1 Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 6 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 8 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 12 Word 32
EndPairing
}
Pairing (Arch_performTransfer (ASM) <= Kernel_C.Arch_performTransfer (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var arch___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var tcb_src___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var tcb_dest___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (handleRecv (ASM) <= Kernel_C.handleRecv (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var isBlocking___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 432 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (arch_clean_invalidate_caches (ASM) <= Kernel_C.arch_clean_invalidate_caches (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 16 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invokeCNodeInsert (ASM) <= Kernel_C.invokeCNodeInsert (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var srcSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var destSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 72 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (isIRQActive (ASM) <= Kernel_C.isIRQActive (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var irq___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cleanInvalidateCacheRange_RAM (ASM) <= Kernel_C.cleanInvalidateCacheRange_RAM (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var start___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var end___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var pstart___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (armv_init_user_access (ASM) <= Kernel_C.armv_init_user_access (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cteInsert (ASM) <= Kernel_C.cteInsert (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var newCap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var newCap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var srcSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var destSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 56 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (create_domain_cap (ASM) <= Kernel_C.create_domain_cap (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 24 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cancelSignal (ASM) <= Kernel_C.cancelSignal (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var threadPtr___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var ntfnPtr___ptr_to_struct_notification_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 96 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (decodeCNodeInvocation (ASM) <= Kernel_C.decodeCNodeInvocation (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var invLabel___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var length___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 540 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (configureIdleThread (ASM) <= Kernel_C.configureIdleThread (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tcb___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 64 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (maybe_alloc_extra_bi (ASM) <= Kernel_C.maybe_alloc_extra_bi (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cmp_size_bits___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var extra_bi_size_bits___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 16 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invokeTCB_Resume (ASM) <= Kernel_C.invokeTCB_Resume (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 228 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (lookupPTSlot (ASM) <= Kernel_C.lookupPTSlot (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var pd___ptr_to_struct_pde_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var vptr___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_lookupPTSlot_ret_C#v.status_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_lookupPTSlot_ret_C#v.ptSlot_C Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (arch_clean_invalidate_L1_caches (ASM) <= Kernel_C.arch_clean_invalidate_L1_caches (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var type___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (activate_kernel_vspace (ASM) <= Kernel_C.activate_kernel_vspace (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 16 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invokeUntyped_Retype (ASM) <= Kernel_C.invokeUntyped_Retype (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var srcSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var reset___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var retypeBase___ptr_to_void#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var newType___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var userSize___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var destCNode___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 C_IN Var destOffset___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 C_IN Var destLength___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 16 Word 32 C_IN Var deviceMemory___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 168 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 16 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 7 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 16 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cleanInvalidateL1Caches (ASM) <= Kernel_C.cleanInvalidateL1Caches (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (handleInvocation (ASM) <= Kernel_C.handleInvocation (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var isCall___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var isBlocking___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 724 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (getObjectSize (ASM) <= Kernel_C.getObjectSize (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var t___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var userObjSize___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 24 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (lookupIPCBuffer (ASM) <= Kernel_C.lookupIPCBuffer (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var isReceiver___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 16 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__ptr_to_unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (deleteASID (ASM) <= Kernel_C.deleteASID (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var asid___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var pd___ptr_to_struct_pde_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 52 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (populate_bi_frame (ASM) <= Kernel_C.populate_bi_frame (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var node_id___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var num_nodes___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var ipcbuf_vptr___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var extra_bi_size___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 36 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (sameRegionAs (ASM) <= Kernel_C.sameRegionAs (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap_a___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap_a___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap_b___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cap_b___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 72 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (createNewObjects (ASM) <= Kernel_C.createNewObjects (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var t___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var parent___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var destCNode___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var destOffset___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var destLength___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var regionBase___ptr_to_void#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 C_IN Var userSize___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 C_IN Var deviceMemory___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 104 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 6 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (resolveAddressBits (ASM) <= Kernel_C.resolveAddressBits (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var nodeCap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var nodeCap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var capptr___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var n_bits___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 32 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 8 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Less Bool 2 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_resolveAddressBits_ret_C#v.status_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_resolveAddressBits_ret_C#v.slot_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 8 Word 32 C_OUT Var ret__struct_resolveAddressBits_ret_C#v.bitsRemaining_C Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 5 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 8 Word 32
EndPairing
}
Pairing (isFinalCapability (ASM) <= Kernel_C.isFinalCapability (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cte___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 104 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invokeIRQControl (ASM) <= Kernel_C.invokeIRQControl (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var irq___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var handlerSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var controlSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 80 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (Arch_sameRegionAs (ASM) <= Kernel_C.Arch_sameRegionAs (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap_a___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap_a___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap_b___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cap_b___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 32 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (sendSignal (ASM) <= Kernel_C.sendSignal (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var ntfnPtr___ptr_to_struct_notification_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var badge___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 252 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (halt (ASM) <= Kernel_C.halt (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invokeCNodeRotate (ASM) <= Kernel_C.invokeCNodeRotate (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap1___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap1___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap2___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cap2___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var slot1___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var slot2___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 C_IN Var slot3___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 56 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 5 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cteSwap (ASM) <= Kernel_C.cteSwap (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap1___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap1___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var slot1___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cap2___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var cap2___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var slot2___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 24 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (decodeSetMCPriority (ASM) <= Kernel_C.decodeSetMCPriority (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var length___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 492 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (decodeSetIPCBuffer (ASM) <= Kernel_C.decodeSetIPCBuffer (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var length___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 524 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (replyFromKernel_success_empty (ASM) <= Kernel_C.replyFromKernel_success_empty (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invokeCNodeDelete (ASM) <= Kernel_C.invokeCNodeDelete (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var destSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 396 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invokeIRQHandler_SetIRQHandler (ASM) <= Kernel_C.invokeIRQHandler_SetIRQHandler (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var irq___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 196 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (deleteCallerCap (ASM) <= Kernel_C.deleteCallerCap (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var receiver___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 180 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (getReceiveSlots (ASM) <= Kernel_C.getReceiveSlots (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 160 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__ptr_to_struct_cte_C#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (doNBRecvFailedTransfer (ASM) <= Kernel_C.doNBRecvFailedTransfer (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (schedule (ASM) <= Kernel_C.schedule (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 84 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (Arch_updateCapData (ASM) <= Kernel_C.Arch_updateCapData (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var preserve___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var data___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Less Bool 2 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.1 Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (handleReply (ASM) <= Kernel_C.handleReply (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 312 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cleanCacheRange_PoU (ASM) <= Kernel_C.cleanCacheRange_PoU (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var start___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var end___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var pstart___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (calculate_extra_bi_size_bits (ASM) <= Kernel_C.calculate_extra_bi_size_bits (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var extra_size___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (doFlush (ASM) <= Kernel_C.doFlush (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var invLabel___int#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var start___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var end___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var pstart___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 36 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invokeTCB_ReadRegisters (ASM) <= Kernel_C.invokeTCB_ReadRegisters (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tcb_src___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var suspendSource___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var n___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var arch___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var call___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 236 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invalidateASIDEntry (ASM) <= Kernel_C.invalidateASIDEntry (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var asid___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (Arch_decodeInvocation (ASM) <= Kernel_C.Arch_decodeInvocation (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var invLabel___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var length___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cptr___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 C_IN Var call___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 248 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 6 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (Arch_finaliseCap (ASM) <= Kernel_C.Arch_finaliseCap (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var final___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 108 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 12 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_finaliseCap_ret_C#v.remainder_C.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_finaliseCap_ret_C#v.remainder_C.words_C.1 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 8 Word 32 C_OUT Var ret__struct_finaliseCap_ret_C#v.cleanupInfo_C.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 12 Word 32 C_OUT Var ret__struct_finaliseCap_ret_C#v.cleanupInfo_C.words_C.1 Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 6 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 8 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 12 Word 32
EndPairing
}
Pairing (receiveIPC (ASM) <= Kernel_C.receiveIPC (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var isBlocking___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 344 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (getRestartPC (ASM) <= Kernel_C.getRestartPC (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (create_untypeds (ASM) <= Kernel_C.create_untypeds (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 168 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (unbindNotification (ASM) <= Kernel_C.unbindNotification (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tcb___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invokeCNodeCancelBadgedSends (ASM) <= Kernel_C.invokeCNodeCancelBadgedSends (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 128 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (performInvocation_Notification (ASM) <= Kernel_C.performInvocation_Notification (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var ntfn___ptr_to_struct_notification_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var badge___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 260 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (Arch_sameObjectAs (ASM) <= Kernel_C.Arch_sameObjectAs (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap_a___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap_a___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap_b___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cap_b___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 56 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (l_impl'mrc (ASM) <= r_impl'mrc (C)) {
Pairing
IN ASM_IN Var inst_ident Token C_IN Var inst_ident Token
IN ASM_IN Var mem Mem C_IN Var mem Mem
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
OUT ASM_OUT Var ret_val1 Word 32 C_OUT Var ret_val1 Word 32
OUT ASM_OUT Var mem Mem C_OUT Var mem Mem
OUT ASM_OUT Op ROData Bool 1 Var mem Mem C_OUT Op True Bool 0
EndPairing
}
Pairing (unbindMaybeNotification (ASM) <= Kernel_C.unbindMaybeNotification (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var ntfnPtr___ptr_to_struct_notification_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cancelAllSignals (ASM) <= Kernel_C.cancelAllSignals (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var ntfnPtr___ptr_to_struct_notification_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 72 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (provide_cap (ASM) <= Kernel_C.provide_cap (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 32 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (copyMRs (ASM) <= Kernel_C.copyMRs (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var sender___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var sendBuf___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var receiver___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var recvBuf___ptr_to_unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var n___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 16 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (lookupSlot (ASM) <= Kernel_C.lookupSlot (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var capptr___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 72 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_lookupSlot_raw_ret_C#v.status_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_lookupSlot_raw_ret_C#v.slot_C Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (l_impl'wfi (ASM) <= r_impl'wfi (C)) {
Pairing
IN ASM_IN Var inst_ident Token C_IN Var inst_ident Token
IN ASM_IN Var mem Mem C_IN Var mem Mem
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var mem Mem
OUT ASM_OUT Op ROData Bool 1 Var mem Mem C_OUT Op True Bool 0
EndPairing
}
Pairing (updateCapData (ASM) <= Kernel_C.updateCapData (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var preserve___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var newData___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 12 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Less Bool 2 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.1 Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (Arch_isFrameType (ASM) <= Kernel_C.Arch_isFrameType (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var type___unsigned_long#v Word 32
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invalidateCacheRange_RAM (ASM) <= Kernel_C.invalidateCacheRange_RAM (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var start___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var end___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var pstart___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 20 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (lookupSourceSlot (ASM) <= Kernel_C.lookupSourceSlot (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var root___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var root___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var capptr___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var depth___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 104 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Less Bool 2 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_lookupSlot_ret_C#v.status_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_lookupSlot_ret_C#v.slot_C Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (slowpath (ASM) <= Kernel_C.slowpath (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var syscall___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 740 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (idle_thread (ASM) <= Kernel_C.idle_thread (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (handleUserLevelFault (ASM) <= Kernel_C.handleUserLevelFault (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var w_a___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var w_b___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 408 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (handleSyscall (ASM) <= Kernel_C.handleSyscall (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var syscall___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 732 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (Arch_maskCapRights (ASM) <= Kernel_C.Arch_maskCapRights (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var cap_rights_mask___struct_seL4_CapRights_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 24 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.1 Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (c_handle_fastpath_call (ASM) <= Kernel_C.c_handle_fastpath_call (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cptr___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var msgInfo___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (lookupCapAndSlot (ASM) <= Kernel_C.lookupCapAndSlot (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cPtr___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 88 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 12 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_lookupCapAndSlot_ret_C#v.status_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_lookupCapAndSlot_ret_C#v.cap_C.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 8 Word 32 C_OUT Var ret__struct_lookupCapAndSlot_ret_C#v.cap_C.words_C.1 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 12 Word 32 C_OUT Var ret__struct_lookupCapAndSlot_ret_C#v.slot_C Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 6 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 8 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 12 Word 32
EndPairing
}
Pairing (isMDBParentOf (ASM) <= Kernel_C.isMDBParentOf (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cte_a___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cte_b___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 88 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (l_impl'mcr (ASM) <= r_impl'mcr (C)) {
Pairing
IN ASM_IN Var reg_val1 Word 32 C_IN Var reg_val1 Word 32
IN ASM_IN Var inst_ident Token C_IN Var inst_ident Token
IN ASM_IN Var mem Mem C_IN Var mem Mem
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var mem Mem
OUT ASM_OUT Op ROData Bool 1 Var mem Mem C_OUT Op True Bool 0
EndPairing
}
Pairing (invalidateCacheRange_I (ASM) <= Kernel_C.invalidateCacheRange_I (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var start___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var end___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var pstart___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cleanCaches_PoU (ASM) <= Kernel_C.cleanCaches_PoU (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cleanInvalidate_L1D (ASM) <= Kernel_C.cleanInvalidate_L1D (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (lockTLBEntryCritical (ASM) <= Kernel_C.lockTLBEntryCritical (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var addr___unsigned#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var x___unsigned#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var y___unsigned#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invokeCNodeMove (ASM) <= Kernel_C.invokeCNodeMove (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var srcSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var destSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 32 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (findFreeHWASID (ASM) <= Kernel_C.findFreeHWASID (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 4 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Op WordCast Word 32 1 Var ret__unsigned_char#v Word 8
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (init_freemem (ASM) <= Kernel_C.init_freemem (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var n_available___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var available___ptr_to_struct_p_region_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var n_reserved___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var reserved___ptr_to_struct_region_C#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var it_v_reg___struct_v_region_C#v.start_C Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var it_v_reg___struct_v_region_C#v.end_C Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 C_IN Var extra_bi_size_bits___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 128 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 5 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (decodeSetSpace (ASM) <= Kernel_C.decodeSetSpace (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var length___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 564 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (create_initial_thread (ASM) <= Kernel_C.create_initial_thread (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var it_pd_cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var it_pd_cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var ui_v_entry___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var bi_frame_vptr___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 C_IN Var ipcbuf_vptr___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 C_IN Var ipcbuf_cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 16 Word 32 C_IN Var ipcbuf_cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 176 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 16 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__ptr_to_struct_tcb_C#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 7 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 16 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (create_it_address_space (ASM) <= Kernel_C.create_it_address_space (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var it_v_reg___struct_v_region_C#v.start_C Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var it_v_reg___struct_v_region_C#v.end_C Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 104 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Less Bool 2 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.1 Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (invokeIRQHandler_ClearIRQHandler (ASM) <= Kernel_C.invokeIRQHandler_ClearIRQHandler (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var irq___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 180 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (doNormalTransfer (ASM) <= Kernel_C.doNormalTransfer (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var sender___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var sendBuffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var endpoint___ptr_to_struct_endpoint_C#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var badge___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var canGrant___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var receiver___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 C_IN Var receiveBuffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 232 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 5 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (decodeCopyRegisters (ASM) <= Kernel_C.decodeCopyRegisters (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var length___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 276 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cancelBadgedSends (ASM) <= Kernel_C.cancelBadgedSends (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var epptr___ptr_to_struct_endpoint_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var badge___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 112 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (tcbEPDequeue (ASM) <= Kernel_C.tcbEPDequeue (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var tcb___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var queue___struct_tcb_queue_C#v.head_C Word 32
IN ASM_IN Var r3 Word 32 C_IN Var queue___struct_tcb_queue_C#v.end_C Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 16 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_tcb_queue_C#v.head_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_tcb_queue_C#v.end_C Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (lockTLBEntry (ASM) <= Kernel_C.lockTLBEntry (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var vaddr___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cteRevoke (ASM) <= Kernel_C.cteRevoke (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 404 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (write_it_asid_pool (ASM) <= Kernel_C.write_it_asid_pool (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var it_ap_cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var it_ap_cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var it_pd_cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var it_pd_cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 40 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (lookupCap (ASM) <= Kernel_C.lookupCap (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cPtr___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 88 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 8 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_lookupCap_ret_C#v.status_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_lookupCap_ret_C#v.cap_C.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 8 Word 32 C_OUT Var ret__struct_lookupCap_ret_C#v.cap_C.words_C.1 Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 5 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 8 Word 32
EndPairing
}
Pairing (l_impl'dsb (ASM) <= r_impl'dsb (C)) {
Pairing
IN ASM_IN Var inst_ident Token C_IN Var inst_ident Token
IN ASM_IN Var mem Mem C_IN Var mem Mem
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var mem Mem
OUT ASM_OUT Op ROData Bool 1 Var mem Mem C_OUT Op True Bool 0
EndPairing
}
Pairing (copyGlobalMappings (ASM) <= Kernel_C.copyGlobalMappings (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var newPD___ptr_to_struct_pde_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (create_ipcbuf_frame_cap (ASM) <= Kernel_C.create_ipcbuf_frame_cap (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var pd_cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var pd_cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var vptr___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 112 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Less Bool 2 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.1 Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (replyFromKernel_error (ASM) <= Kernel_C.replyFromKernel_error (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 24 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (doReplyTransfer (ASM) <= Kernel_C.doReplyTransfer (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var sender___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var receiver___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var grant___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 304 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (init_kernel (ASM) <= Kernel_C.init_kernel (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var ui_p_reg_start___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var ui_p_reg_end___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var pv_offset___long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var v_entry___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var dtb_addr_p___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var dtb_size___unsigned#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (write_slot (ASM) <= Kernel_C.write_slot (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var slot_ptr___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (doFaultTransfer (ASM) <= Kernel_C.doFaultTransfer (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var badge___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var sender___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var receiver___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var receiverIPCBuffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 40 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (Arch_activateIdleThread (ASM) <= Kernel_C.Arch_activateIdleThread (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tcb___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (ensureEmptySlot (ASM) <= Kernel_C.ensureEmptySlot (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (str_to_long (ASM) <= Kernel_C.str_to_long (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var str___ptr_to_char#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 16 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (init_core_state (ASM) <= Kernel_C.init_core_state (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var scheduler_action___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (deletingIRQHandler (ASM) <= Kernel_C.deletingIRQHandler (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var irq___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 180 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (lookupExtraCaps (ASM) <= Kernel_C.lookupExtraCaps (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var bufferPtr___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var info___struct_seL4_MessageInfo_C#v.words_C.0 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 112 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (performInvocation_Endpoint (ASM) <= Kernel_C.performInvocation_Endpoint (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var ep___ptr_to_struct_endpoint_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var badge___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var canGrant___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var canGrantReply___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var block___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var call___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 360 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (handleDoubleFault (ASM) <= Kernel_C.handleDoubleFault (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tptr___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var ex1___struct_seL4_Fault_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var ex1___struct_seL4_Fault_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 72 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (strncmp (ASM) <= Kernel_C.strncmp (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var s1___ptr_to_char#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var s2___ptr_to_char#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var n___int#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__int#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (handleVMFaultEvent (ASM) <= Kernel_C.handleVMFaultEvent (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var vm_faultType___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 408 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (create_unmapped_it_frame_cap (ASM) <= Kernel_C.create_unmapped_it_frame_cap (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var pptr___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var use_large___unsigned_long#v Word 32
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.1 Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (get_p_reg_kernel_img_boot (ASM) <= Kernel_C.get_p_reg_kernel_img_boot (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Less Bool 2 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_p_region_C#v.start_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_p_region_C#v.end_C Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (invokeTCB_NotificationControl (ASM) <= Kernel_C.invokeTCB_NotificationControl (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tcb___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var ntfnPtr___ptr_to_struct_notification_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (flushSpace (ASM) <= Kernel_C.flushSpace (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var asid___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 16 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (Arch_decodeIRQControlInvocation (ASM) <= Kernel_C.Arch_decodeIRQControlInvocation (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var invLabel___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var length___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var srcSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 152 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (lookupSlotForCNodeOp (ASM) <= Kernel_C.lookupSlotForCNodeOp (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var isSource___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var root___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var root___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var capptr___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var depth___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 80 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Less Bool 2 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_lookupSlot_ret_C#v.status_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_lookupSlot_ret_C#v.slot_C Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (decodeBindNotification (ASM) <= Kernel_C.decodeBindNotification (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 80 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (initL2Cache (ASM) <= Kernel_C.initL2Cache (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (decodeTCBInvocation (ASM) <= Kernel_C.decodeTCBInvocation (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var invLabel___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var length___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var call___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 604 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 5 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (map_kernel_devices (ASM) <= Kernel_C.map_kernel_devices (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 64 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (setDomain (ASM) <= Kernel_C.setDomain (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tptr___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var dom___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 56 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invokeTCB_CopyRegisters (ASM) <= Kernel_C.invokeTCB_CopyRegisters (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var dest___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var tcb_src___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var suspendSource___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var resumeTarget___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var transferFrame___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var transferInteger___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 C_IN Var transferArch___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 236 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 5 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (map_kernel_frame (ASM) <= Kernel_C.map_kernel_frame (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var paddr___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var vaddr___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var vm_rights___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var attributes___struct_vm_attributes_C#v.words_C.0 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 32 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (reserve_region (ASM) <= Kernel_C.reserve_region (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var reg___struct_p_region_C#v.start_C Word 32
IN ASM_IN Var r1 Word 32 C_IN Var reg___struct_p_region_C#v.end_C Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 24 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (decodeIRQHandlerInvocation (ASM) <= Kernel_C.decodeIRQHandlerInvocation (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var invLabel___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var irq___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 228 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (create_frames_of_region (ASM) <= Kernel_C.create_frames_of_region (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var pd_cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var pd_cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var reg___struct_region_C#v.start_C Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 C_IN Var reg___struct_region_C#v.end_C Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 C_IN Var do_map___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 16 Word 32 C_IN Var pv_offset___long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 144 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 8 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Less Bool 2 Op Plus Word 32 2 Var r13 Word 32 Num 16 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 16 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_create_frames_of_region_ret_C#v.region_C.start_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_create_frames_of_region_ret_C#v.region_C.end_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 8 Word 32 C_OUT Var ret__struct_create_frames_of_region_ret_C#v.success_C Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 7 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 16 Word 32 ASM_OUT Op StackWrapper RelWrapper 5 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 8 Word 32
EndPairing
}
Pairing (sameObjectAs (ASM) <= Kernel_C.sameObjectAs (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap_a___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap_a___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap_b___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cap_b___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 96 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (sendIPC (ASM) <= Kernel_C.sendIPC (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var blocking___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var do_call___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var badge___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var canGrant___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var canGrantReply___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 C_IN Var epptr___ptr_to_struct_endpoint_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 336 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 5 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (activateThread (ASM) <= Kernel_C.activateThread (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 64 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (create_root_cnode (ASM) <= Kernel_C.create_root_cnode (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 4 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Less Bool 2 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.1 Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (unmapPage (ASM) <= Kernel_C.unmapPage (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var page_size___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var asid___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var vptr___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var pptr___ptr_to_void#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 92 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (handleFaultReply (ASM) <= Kernel_C.handleFaultReply (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var receiver___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var sender___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 40 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (memzero (ASM) <= Kernel_C.memzero (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var s___ptr_to_void#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var n___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (scheduleChooseNewThread (ASM) <= Kernel_C.scheduleChooseNewThread (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 76 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invokeTCB_ThreadControl (ASM) <= Kernel_C.invokeTCB_ThreadControl (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var target___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var faultep___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var mcp___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var priority___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var cRoot_newCap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 C_IN Var cRoot_newCap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 C_IN Var cRoot_srcSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 16 Word 32 C_IN Var vRoot_newCap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 20 Word 32 C_IN Var vRoot_newCap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 24 Word 32 C_IN Var vRoot_srcSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 28 Word 32 C_IN Var bufferAddr___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 32 Word 32 C_IN Var bufferCap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 36 Word 32 C_IN Var bufferCap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 40 Word 32 C_IN Var bufferSrcSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 44 Word 32 C_IN Var updateFlags___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 420 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 44 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 14 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 16 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 20 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 24 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 28 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 32 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 36 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 40 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 44 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cteDelete (ASM) <= Kernel_C.cteDelete (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var exposed___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Op IfThenElse Word 32 3 Op Equals Bool 2 Var r1 Word 32 Num 0 Word 32 Num 316 Word 32 Num 388 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cleanCacheRange_RAM (ASM) <= Kernel_C.cleanCacheRange_RAM (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var start___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var end___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var pstart___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 4 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (lookupPDSlot (ASM) <= Kernel_C.lookupPDSlot (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var pd___ptr_to_struct_pde_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var vptr___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__ptr_to_struct_pde_C#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (Arch_decodeTransfer (ASM) <= Kernel_C.Arch_decodeTransfer (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var flags___unsigned_long#v Word 32
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (maskVMRights (ASM) <= Kernel_C.maskVMRights (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var vm_rights___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap_rights_mask___struct_seL4_CapRights_C#v.words_C.0 Word 32
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (doIPCTransfer (ASM) <= Kernel_C.doIPCTransfer (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var sender___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var endpoint___ptr_to_struct_endpoint_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var badge___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var grant___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var receiver___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 280 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (decodeIRQControlInvocation (ASM) <= Kernel_C.decodeIRQControlInvocation (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var invLabel___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var length___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var srcSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 192 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (setNextPC (ASM) <= Kernel_C.setNextPC (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var v___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (c_handle_interrupt (ASM) <= Kernel_C.c_handle_interrupt (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 276 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (unmapPageTable (ASM) <= Kernel_C.unmapPageTable (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var asid___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var vaddr___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var pt___ptr_to_struct_pte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 68 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (tcbEPAppend (ASM) <= Kernel_C.tcbEPAppend (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var tcb___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var queue___struct_tcb_queue_C#v.head_C Word 32
IN ASM_IN Var r3 Word 32 C_IN Var queue___struct_tcb_queue_C#v.end_C Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_tcb_queue_C#v.head_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_tcb_queue_C#v.end_C Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (emptySlot (ASM) <= Kernel_C.emptySlot (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cleanupInfo___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cleanupInfo___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 24 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (decodeDomainInvocation (ASM) <= Kernel_C.decodeDomainInvocation (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var invLabel___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var length___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 72 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (branchFlushRange (ASM) <= Kernel_C.branchFlushRange (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var start___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var end___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var pstart___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (handleUnknownSyscall (ASM) <= Kernel_C.handleUnknownSyscall (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var w___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 408 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (insert_region (ASM) <= Kernel_C.insert_region (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var reg___struct_region_C#v.start_C Word 32
IN ASM_IN Var r1 Word 32 C_IN Var reg___struct_region_C#v.end_C Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 48 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (c_handle_undefined_instruction (ASM) <= Kernel_C.c_handle_undefined_instruction (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 416 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (setIRQState (ASM) <= Kernel_C.setIRQState (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var irqState___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var irq___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (decodeUnbindNotification (ASM) <= Kernel_C.decodeUnbindNotification (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 72 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (alloc_rootserver_obj (ASM) <= Kernel_C.alloc_rootserver_obj (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var size_bits___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var n___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (Arch_switchToIdleThread (ASM) <= Kernel_C.Arch_switchToIdleThread (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 44 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (setVMRoot (ASM) <= Kernel_C.setVMRoot (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tcb___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 36 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (checkValidIPCBuffer (ASM) <= Kernel_C.checkValidIPCBuffer (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var vptr___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (dist_init (ASM) <= Kernel_C.dist_init (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (create_bi_frame_cap (ASM) <= Kernel_C.create_bi_frame_cap (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var pd_cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var pd_cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var vptr___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 112 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (tcbSchedDequeue (ASM) <= Kernel_C.tcbSchedDequeue (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tcb___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 28 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (create_mapped_it_frame_cap (ASM) <= Kernel_C.create_mapped_it_frame_cap (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var pd_cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var pd_cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var pptr___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var vptr___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var asid___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 C_IN Var use_large___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 C_IN Var executable___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 56 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Less Bool 2 Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.1 Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 6 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (rescheduleRequired (ASM) <= Kernel_C.rescheduleRequired (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 40 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (setPriority (ASM) <= Kernel_C.setPriority (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tptr___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var prio___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 64 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (findPDForASID (ASM) <= Kernel_C.findPDForASID (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var asid___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_findPDForASID_ret_C#v.status_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_findPDForASID_ret_C#v.pd_C Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (strlcat (ASM) <= Kernel_C.strlcat (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var dest___ptr_to_char#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var src___ptr_to_char#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var size___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (setupReplyMaster (ASM) <= Kernel_C.setupReplyMaster (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cleanInvalidate_D_PoC (ASM) <= Kernel_C.cleanInvalidate_D_PoC (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (c_handle_instruction_fault (ASM) <= Kernel_C.c_handle_instruction_fault (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 416 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (decodeWriteRegisters (ASM) <= Kernel_C.decodeWriteRegisters (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var length___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 292 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invokeIRQHandler_AckIRQ (ASM) <= Kernel_C.invokeIRQHandler_AckIRQ (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var irq___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (setMCPriority (ASM) <= Kernel_C.setMCPriority (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tptr___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var mcp___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invokeCNodeSaveCaller (ASM) <= Kernel_C.invokeCNodeSaveCaller (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var destSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 32 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (maskCapRights (ASM) <= Kernel_C.maskCapRights (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var cap_rights___struct_seL4_CapRights_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 40 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.1 Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (flushTable (ASM) <= Kernel_C.flushTable (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var pd___ptr_to_struct_pde_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var asid___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var vptr___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var pt___ptr_to_struct_pte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 52 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (isIOSpaceFrameCap (ASM) <= Kernel_C.isIOSpaceFrameCap (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (initIRQController (ASM) <= Kernel_C.initIRQController (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (arch_get_n_paging (ASM) <= Kernel_C.arch_get_n_paging (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var it_v_reg___struct_v_region_C#v.start_C Word 32
IN ASM_IN Var r1 Word 32 C_IN Var it_v_reg___struct_v_region_C#v.end_C Word 32
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (lookupTargetSlot (ASM) <= Kernel_C.lookupTargetSlot (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var root___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var root___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var capptr___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var depth___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 104 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Less Bool 2 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_lookupSlot_ret_C#v.status_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_lookupSlot_ret_C#v.slot_C Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (c_handle_data_fault (ASM) <= Kernel_C.c_handle_data_fault (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 416 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (insertNewCap (ASM) <= Kernel_C.insertNewCap (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var parent___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 16 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invalidateTLBByASID (ASM) <= Kernel_C.invalidateTLBByASID (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var asid___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (Arch_setMRs_fault (ASM) <= Kernel_C.Arch_setMRs_fault (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var sender___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var receiver___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var receiveIPCBuffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var faultType___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 16 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (handleVMFault (ASM) <= Kernel_C.handleVMFault (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var vm_faultType___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 16 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (get_p_reg_kernel_img (ASM) <= Kernel_C.get_p_reg_kernel_img (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Less Bool 2 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_p_region_C#v.start_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_p_region_C#v.end_C Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (cap_get_capIsPhysical (ASM) <= Kernel_C.cap_get_capIsPhysical (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (receiveSignal (ASM) <= Kernel_C.receiveSignal (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var isBlocking___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 72 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (switchToIdleThread (ASM) <= Kernel_C.switchToIdleThread (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 52 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (Arch_prepareThreadDelete (ASM) <= Kernel_C.Arch_prepareThreadDelete (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (setIRQTrigger (ASM) <= Kernel_C.setIRQTrigger (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var irq___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var trigger___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (create_untypeds_for_region (ASM) <= Kernel_C.create_untypeds_for_region (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var device_memory___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var reg___struct_region_C#v.start_C Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var reg___struct_region_C#v.end_C Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var first_untyped_slot___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 104 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (initTimer (ASM) <= Kernel_C.initTimer (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (flushPage (ASM) <= Kernel_C.flushPage (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var page_size___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var pd___ptr_to_struct_pde_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var asid___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var vptr___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 52 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (restore_user_context (ASM) <= Kernel_C.restore_user_context (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (Arch_handleFaultReply (ASM) <= Kernel_C.Arch_handleFaultReply (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var receiver___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var sender___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var faultType___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 16 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cap_get_capPtr (ASM) <= Kernel_C.cap_get_capPtr (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__ptr_to_void#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (completeSignal (ASM) <= Kernel_C.completeSignal (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var ntfnPtr___ptr_to_struct_notification_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var tcb___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 16 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (memcpy (ASM) <= Kernel_C.memcpy (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var ptr_dst___ptr_to_void#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var ptr_src___ptr_to_void#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var n___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__ptr_to_void#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (handleFault (ASM) <= Kernel_C.handleFault (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tptr___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 400 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (arm_errata (ASM) <= Kernel_C.arm_errata (C)) {
Pairing
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (cteMove (ASM) <= Kernel_C.cteMove (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var newCap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var newCap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var srcSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var destSlot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 16 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (setExtraBadge (ASM) <= Kernel_C.setExtraBadge (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var bufferPtr___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var badge___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var i___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (timerTick (ASM) <= Kernel_C.timerTick (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 48 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (strlcpy (ASM) <= Kernel_C.strlcpy (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var dest___ptr_to_char#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var src___ptr_to_char#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var size___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 8 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (bindNotification (ASM) <= Kernel_C.bindNotification (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tcb___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var ntfnPtr___ptr_to_struct_notification_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (switchToThread (ASM) <= Kernel_C.switchToThread (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 60 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (scheduleTCB (ASM) <= Kernel_C.scheduleTCB (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tptr___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 48 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (chooseThread (ASM) <= Kernel_C.chooseThread (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 68 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (clean_D_PoU (ASM) <= Kernel_C.clean_D_PoU (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (create_it_asid_pool (ASM) <= Kernel_C.create_it_asid_pool (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var root_cnode_cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 40 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.1 Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (setMRs_syscall_error (ASM) <= Kernel_C.setMRs_syscall_error (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var receiveIPCBuffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 16 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (sendFaultIPC (ASM) <= Kernel_C.sendFaultIPC (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tptr___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 392 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (decodeUntypedInvocation (ASM) <= Kernel_C.decodeUntypedInvocation (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var invLabel___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var length___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var call___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 272 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 5 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (merge_regions (ASM) <= Kernel_C.merge_regions (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (getExtraCPtr (ASM) <= Kernel_C.getExtraCPtr (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var bufferPtr___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var i___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (handleInterrupt (ASM) <= Kernel_C.handleInterrupt (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var irq___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 260 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (capSwapForDelete (ASM) <= Kernel_C.capSwapForDelete (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var slot1___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var slot2___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 56 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (loadHWASID (ASM) <= Kernel_C.loadHWASID (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var asid___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__struct_pde_C#v.words_C.0 Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (decodeReadRegisters (ASM) <= Kernel_C.decodeReadRegisters (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var length___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var call___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 276 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (tcbSchedAppend (ASM) <= Kernel_C.tcbSchedAppend (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tcb___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 32 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invokeTCB_Suspend (ASM) <= Kernel_C.invokeTCB_Suspend (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 228 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (preemptionPoint (ASM) <= Kernel_C.preemptionPoint (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (char_to_long (ASM) <= Kernel_C.char_to_long (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Op WordCast Word 32 1 Var c___char#v Word 8
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__long#v Word 32
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (restart (ASM) <= Kernel_C.restart (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var target___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 220 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (decodeTCBConfigure (ASM) <= Kernel_C.decodeTCBConfigure (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r1 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var length___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 572 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (decodeInvocation (ASM) <= Kernel_C.decodeInvocation (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var invLabel___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var length___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var capIndex___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 C_IN Var block___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 C_IN Var call___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 16 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 644 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 16 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 7 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 16 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (decodeARMMMUInvocation (ASM) <= Kernel_C.decodeARMMMUInvocation (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var invLabel___unsigned_long#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var length___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var cptr___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var cte___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var cap___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 C_IN Var cap___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 C_IN Var call___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 224 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 6 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 4 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 8 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 12 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (setVMRootForFlush (ASM) <= Kernel_C.setVMRootForFlush (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var pd___ptr_to_struct_pde_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var asid___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 20 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (l_impl'dmb (ASM) <= r_impl'dmb (C)) {
Pairing
IN ASM_IN Var inst_ident Token C_IN Var inst_ident Token
IN ASM_IN Var mem Mem C_IN Var mem Mem
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var mem Mem
OUT ASM_OUT Op ROData Bool 1 Var mem Mem C_OUT Op True Bool 0
EndPairing
}
Pairing (Arch_postModifyRegisters (ASM) <= Kernel_C.Arch_postModifyRegisters (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var tptr___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Op ROData Bool 1 Var mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 0 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem ASM_IN Var mem Mem
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (Arch_createObject (ASM) <= Kernel_C.Arch_createObject (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var t___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var regionBase___ptr_to_void#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var userSize___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var deviceMemory___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 24 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Less Bool 2 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.1 Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (createObject (ASM) <= Kernel_C.createObject (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var t___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var regionBase___ptr_to_void#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var userSize___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var deviceMemory___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 40 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Less Bool 2 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.0 Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_cap_C#v.words_C.1 Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (lookupPivotSlot (ASM) <= Kernel_C.lookupPivotSlot (C)) {
Pairing
IN ASM_IN Var r1 Word 32 C_IN Var root___struct_cap_C#v.words_C.0 Word 32
IN ASM_IN Var r2 Word 32 C_IN Var root___struct_cap_C#v.words_C.1 Word 32
IN ASM_IN Var r3 Word 32 C_IN Var capptr___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var depth___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 104 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r0 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 4 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Less Bool 2 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 Op Plus Word 32 2 Var r0 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 C_OUT Var ret__struct_lookupSlot_ret_C#v.status_C Word 32
OUT ASM_OUT Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32 C_OUT Var ret__struct_lookupSlot_ret_C#v.slot_C Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Var ret_addr_input Word 32 ASM_OUT Var ret_addr_input Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 4 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var ret_addr_input Word 32 Num 0 Word 32 Op Plus Word 32 2 Var ret_addr_input Word 32 Num 4 Word 32
EndPairing
}
Pairing (performInvocation_Reply (ASM) <= Kernel_C.performInvocation_Reply (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var thread___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var slot___ptr_to_struct_cte_C#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var canGrant___unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 312 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (invokeTCB_WriteRegisters (ASM) <= Kernel_C.invokeTCB_WriteRegisters (C)) {
Pairing
IN ASM_IN Var r0 Word 32 C_IN Var dest___ptr_to_struct_tcb_C#v Word 32
IN ASM_IN Var r1 Word 32 C_IN Var resumeTarget___unsigned_long#v Word 32
IN ASM_IN Var r2 Word 32 C_IN Var n___unsigned_long#v Word 32
IN ASM_IN Var r3 Word 32 C_IN Var arch___unsigned_long#v Word 32
IN ASM_IN Op MemAcc Word 32 2 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 C_IN Var buffer___ptr_to_unsigned_long#v Word 32
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 252 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Var r13 Word 32 Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var r0 Word 32 C_OUT Var ret__unsigned_long#v Word 32
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 3 Var r13 Word 32 Var stack Mem Op Plus Word 32 2 Var r13 Word 32 Num 0 Word 32 ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
Pairing (create_idle_thread (ASM) <= Kernel_C.create_idle_thread (C)) {
Pairing
IN ASM_IN Var mem Mem C_IN Var Mem Mem
IN C_IN Op ROData Bool 1 Var Mem Mem C_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var r13 Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret Word 32 Var r14 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Op BWAnd Word 32 2 Var ret Word 32 Num 3 Word 32 Num 0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op Equals Bool 2 Var ret_addr_input Word 32 Var r0 Word 32 ASM_IN Op True Bool 0
IN ASM_IN Op LessEquals Bool 2 Num 72 Word 32 Var r13 Word 32 ASM_IN Op True Bool 0
OUT ASM_OUT Var mem Mem C_OUT Var Mem Mem
OUT C_OUT Op ROData Bool 1 Var Mem Mem C_OUT Op True Bool 0
OUT ASM_IN Var r4 Word 32 ASM_OUT Var r4 Word 32
OUT ASM_IN Var r5 Word 32 ASM_OUT Var r5 Word 32
OUT ASM_IN Var r6 Word 32 ASM_OUT Var r6 Word 32
OUT ASM_IN Var r7 Word 32 ASM_OUT Var r7 Word 32
OUT ASM_IN Var r8 Word 32 ASM_OUT Var r8 Word 32
OUT ASM_IN Var r9 Word 32 ASM_OUT Var r9 Word 32
OUT ASM_IN Var r10 Word 32 ASM_OUT Var r10 Word 32
OUT ASM_IN Var r11 Word 32 ASM_OUT Var r11 Word 32
OUT ASM_IN Var r13 Word 32 ASM_OUT Var r13 Word 32
OUT ASM_IN Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem ASM_OUT Op StackWrapper RelWrapper 2 Var r13 Word 32 Var stack Mem
EndPairing
}
